parameters:
  - name: github_release
    displayName: Create Github Release
    type: boolean
    default: false
  - name: dockerhub_release
    displayName: Create Dockerhub Release
    type: boolean
    default: false

stages:
  - stage: Generate_toolchain
    jobs:
      - job: aarch64_gcc_10_5_0_glibc_2_28
        pool:
          vmImage: 'ubuntu-latest'
        timeoutInMinutes: 180
        steps:
          - template: build-gnu-toolchain.yml
            parameters:
              config: aarch64-gcc-10.5.0-glibc-2.28.config
              arch: arm64
              tuple: aarch64-linux-gnu
              pkg: aarch64-linux-gnu-glibc-2.28-gcc-10.5.0

      - job: aarch64_gcc_8_5_0_glibc_2_28
        pool:
          vmImage: 'ubuntu-latest'
        timeoutInMinutes: 180
        steps:
          - template: build-gnu-toolchain.yml
            parameters:
              config: aarch64-gcc-8.5.0-glibc-2.28.config
              arch: arm64
              tuple: aarch64-linux-gnu
              pkg: aarch64-linux-gnu-glibc-2.28-gcc-8.5.0

      - job: x86_64_gcc_10_5_0_glibc_2_28
        pool:
          vmImage: 'ubuntu-latest'
        timeoutInMinutes: 180
        steps:
          - template: build-gnu-toolchain.yml
            parameters:
              config: x86_64-gcc-10.5.0-glibc-2.28.config
              arch: amd64
              tuple: x86_64-linux-gnu
              pkg: x86_64-linux-gnu-glibc-2.28-gcc-10.5.0

      - job: x86_64_gcc_8_5_0_glibc_2_28
        pool:
          vmImage: 'ubuntu-latest'
        timeoutInMinutes: 180
        steps:
          - template: build-gnu-toolchain.yml
            parameters:
              config: x86_64-gcc-8.5.0-glibc-2.28.config
              arch: amd64
              tuple: x86_64-linux-gnu
              pkg: x86_64-linux-gnu-glibc-2.28-gcc-8.5.0

      - job: armhf_gcc_10_5_0_glibc_2_28
        pool:
          vmImage: 'ubuntu-latest'
        timeoutInMinutes: 180
        steps:
          - template: build-gnu-toolchain.yml
            parameters:
              arch: armhf
              config: armhf-gcc-10.5.0-glibc-2.28.config
              tuple: arm-rpi-linux-gnueabihf
              pkg: arm-rpi-linux-gnueabihf-glibc-2.28-gcc-10.5.0

      - job: armhf_gcc_8_5_0_glibc_2_28
        pool:
          vmImage: 'ubuntu-latest'
        timeoutInMinutes: 180
        steps:
          - template: build-gnu-toolchain.yml
            parameters:
              arch: armhf
              config: armhf-gcc-8.5.0-glibc-2.28.config
              tuple: arm-rpi-linux-gnueabihf
              pkg: arm-rpi-linux-gnueabihf-glibc-2.28-gcc-8.5.0

      - job: aarch64_musl_gcc_10_3_0
        pool:
          vmImage: 'ubuntu-latest'
        timeoutInMinutes: 180
        steps:
          - template: build-musl-toolchain.yml
            parameters:
              tuple: aarch64-linux-musl
              pkg: aarch64-linux-musl-gcc-10.3.0

  - ${{ if parameters.github_release }}:
    - stage: Release_toolchain
      dependsOn:
        - Generate_toolchain
      pool:
        vmImage: 'ubuntu-latest'
      jobs:
        - job: Publish_to_Github
          variables:
            currentDate: $[ format('{0:yyyy}{0:MM}{0:dd}', pipeline.startTime) ]
          steps:
            - download: current
              patterns: |
                **/*.tar.gz
            - script: cp $(Pipeline.Workspace)/x86_64-linux-gnu-glibc-2.28-gcc-10.5.0/x86_64-linux-gnu-glibc-2.28-gcc-10.5.0.tar.gz $(Build.ArtifactStagingDirectory)/x86_64-linux-gnu-glibc-2.28-gcc-10.5.0.tar.gz
              displayName: Copy x86_64 glibc 2.28 gcc 10.5.0 toolchain
            - script: cp $(Pipeline.Workspace)/aarch64-linux-gnu-glibc-2.28-gcc-10.5.0/aarch64-linux-gnu-glibc-2.28-gcc-10.5.0.tar.gz $(Build.ArtifactStagingDirectory)/aarch64-linux-gnu-glibc-2.28-gcc-10.5.0.tar.gz
              displayName: Copy aarch64 glibc 2.28 gcc 10.5.0 toolchain
            - script: cp $(Pipeline.Workspace)/arm-rpi-linux-gnueabihf-glibc-2.28-gcc-10.5.0/arm-rpi-linux-gnueabihf-glibc-2.28-gcc-10.5.0.tar.gz $(Build.ArtifactStagingDirectory)/arm-rpi-linux-gnueabihf-glibc-2.28-gcc-10.5.0.tar.gz
              displayName: Copy armhf glibc 2.28 gcc 10.5.0 toolchain
            - script: cp $(Pipeline.Workspace)/x86_64-linux-gnu-glibc-2.28-gcc-8.5.0/x86_64-linux-gnu-glibc-2.28-gcc-8.5.0.tar.gz $(Build.ArtifactStagingDirectory)/x86_64-linux-gnu-glibc-2.28-gcc-8.5.0.tar.gz
              displayName: Copy x86_64 glibc 2.28 gcc 8.5.0 toolchain
            - script: cp $(Pipeline.Workspace)/aarch64-linux-gnu-glibc-2.28-gcc-8.5.0/aarch64-linux-gnu-glibc-2.28-gcc-8.5.0.tar.gz $(Build.ArtifactStagingDirectory)/aarch64-linux-gnu-glibc-2.28-gcc-8.5.0.tar.gz
              displayName: Copy aarch64 glibc 2.28 gcc 8.5.0 toolchain
            - script: cp $(Pipeline.Workspace)/arm-rpi-linux-gnueabihf-glibc-2.28-gcc-8.5.0/arm-rpi-linux-gnueabihf-glibc-2.28-gcc-8.5.0.tar.gz $(Build.ArtifactStagingDirectory)/arm-rpi-linux-gnueabihf-glibc-2.28-gcc-8.5.0.tar.gz
              displayName: Copy armhf glibc 2.28 gcc 8.5.0 toolchain
            - script: cp $(Pipeline.Workspace)/aarch64-linux-musl-gcc-10.3.0/aarch64-linux-musl-gcc-10.3.0.tar.gz $(Build.ArtifactStagingDirectory)/aarch64-linux-musl-gcc-10.3.0.tar.gz
              displayName: Copy aarch64 musl gcc 10.3.0 toolchain
            - script: (cd $(Build.ArtifactStagingDirectory) ; shasum -a 256 *.tar.gz) > $(Build.ArtifactStagingDirectory)/SHASUMS256.txt
              displayName: Compute checksums
            - task: GithubRelease@1
              displayName: Create GitHub Release
              inputs:
                gitHubConnection: oauth
                repositoryName: microsoft/vscode-linux-build-agent
                action: create
                addChangeLog: false
                tagSource: userSpecifiedTag
                tag: v$(currentDate)-$(Build.BuildId)

  - stage: Containers
    dependsOn: []
    jobs:
      - job: alpine_x64
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - template: build-containers.yml
            parameters:
              arch: alpine-x64
              release: ${{ parameters.dockerhub_release }}

      - job: alpine_arm64
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - template: build-containers.yml
            parameters:
              qemu: 'true'
              arch: alpine-arm64
              release: ${{ parameters.dockerhub_release }}

      #- job: snapcraft_x64
      #  pool:
      #    vmImage: 'ubuntu-latest'
      #  steps:
      #    - template: build-containers.yml
      #      parameters:
      #        arch: snapcraft-x64
      #        release: ${{ parameters.dockerhub_release }}
